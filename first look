<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üá®üá≥ Guochao vs LVMH | Global Analytics Dashboard</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <meta name="description" content="Global interactive dashboard for Guochao vs LVMH social media analysis, with East vs. West performance comparison via Radar Charts.">
    <style>
        :root {
            --bg-color-gradient: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            --card-color: white;
            --text-color: #2c3e50;
            --text-color-light: #7f8c8d;
            --header-color: #2c3e50;
            --border-color: #e0e6ed;
            --shadow-color: rgba(44, 62, 80, 0.08);
            --shadow-color-hover: rgba(44, 62, 80, 0.15);
            --primary-accent: #3498db;
            --guochao-color: #e74c3c;
            --luxury-color: #1abc9c;
            --us-color: #9b59b6;
            --europe-color: #f1c40f;
            --top-bar-bg: linear-gradient(90deg, var(--guochao-color), var(--luxury-color), var(--us-color), var(--europe-color));
        }

        [data-theme="dark"] {
            --bg-color-gradient: linear-gradient(135deg, #0f2027 0%, #203a43 50%, #2c5364 100%);
            --card-color: #1f2937;
            --text-color: #e5e7eb;
            --text-color-light: #9ca3af;
            --header-color: white;
            --border-color: #374151;
            --shadow-color: rgba(0,0,0,0.2);
            --shadow-color-hover: rgba(0,0,0,0.3);
            --primary-accent: #5dade2;
        }

        * { margin: 0; padding: 0; box-sizing: border-box; }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: var(--bg-color-gradient);
            color: var(--text-color);
            min-height: 100vh;
            padding: 20px;
            transition: background 0.3s ease, color 0.3s ease;
        }
        
        .container {
            max-width: 1800px; margin: 0 auto; background: var(--card-color);
            border-radius: 20px; padding: 30px; box-shadow: 0 25px 50px var(--shadow-color);
            border: 1px solid var(--border-color); transition: all 0.3s ease;
        }
        
        .header { text-align: center; margin-bottom: 20px; padding-bottom: 20px; border-bottom: 1px solid var(--border-color); position: relative; }
        .header h1 {
            color: var(--header-color);
            font-size: 2.5em;
            font-weight: 700;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .guochao-icon, .luxury-icon {
            display: inline-block;
            width: 24px;
            height: 24px;
            border-radius: 50%;
            margin: 0 15px;
        }
        .guochao-icon { background: var(--guochao-color); }
        .luxury-icon { background: var(--luxury-color); }

        .theme-switcher { position: absolute; top: 10px; right: 10px; }
        .switch { position: relative; display: inline-block; width: 60px; height: 34px; }
        .switch input { opacity: 0; width: 0; height: 0; }
        .slider { position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; transition: .4s; border-radius: 34px; }
        .slider:before { position: absolute; content: ""; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; transition: .4s; border-radius: 50%; }
        .slider::after { content: '‚òÄÔ∏è'; position: absolute; left: 8px; top: 6px; transition: opacity 0.3s ease; }
        input:checked + .slider::after { content: 'üåô'; left: 35px; }
        input:checked + .slider { background-color: var(--primary-accent); }
        input:checked + .slider:before { transform: translateX(26px); }

        .metrics {
            display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px; margin: 25px 0;
        }
        
        .metric-card {
            background: var(--card-color); border: 1px solid var(--border-color);
            padding: 20px; border-radius: 15px; text-align: center;
            box-shadow: 0 5px 15px var(--shadow-color);
            transition: all 0.2s ease-in-out;
            border-top: 4px solid var(--guochao-color);
        }
        .metric-card.luxury { border-top-color: var(--luxury-color); }
        .metric-card.sov { border-top-color: var(--primary-accent); }
        .metric-card:hover { transform: translateY(-4px); box-shadow: 0 10px 20px var(--shadow-color-hover); }
        .metric-card h3 { margin-bottom: 10px; font-size: 1em; font-weight: 500; color: var(--text-color-light); }
        .metric-card .value { font-size: 2.5em; font-weight: bold; color: var(--text-color); }
        
        .main-layout { display: grid; grid-template-columns: 3fr 1fr; gap: 30px; }
        .tabs { display: flex; border-bottom: 1px solid var(--border-color); margin-bottom: 25px; }
        .tab-link {
            padding: 12px 25px; cursor: pointer; font-size: 1.1em;
            font-weight: 500; transition: all 0.2s ease;
            border-bottom: 3px solid transparent; color: var(--text-color-light);
        }
        .tab-link:hover { background-color: var(--border-color); color: var(--text-color); }
        .tab-link.active { color: var(--primary-accent); border-bottom: 3px solid var(--primary-accent); }
        
        .tab-content { display: none; }
        .tab-content.active { display: block; animation: fadeIn 0.5s; }
        @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

        .charts { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }
        .chart {
            background: var(--card-color); border: 1px solid var(--border-color);
            border-radius: 15px; padding: 15px; min-height: 420px;
            box-shadow: 0 8px 20px var(--shadow-color);
            transition: all 0.3s ease;
        }
        .insights-card {
             background: var(--card-color); border: 1px solid var(--border-color);
             padding: 25px; border-radius: 15px;
        }
        .insights-card h3 { color: var(--header-color); margin-bottom: 15px; }
        .insights-card ul { list-style: none; padding-left: 0; }
        .insights-card li { margin-bottom: 10px; position: relative; padding-left: 25px; }
        .insights-card li::before { content: 'üí°'; position: absolute; left: 0; }
        
        .sentiment-card { text-align: center; }
        .sentiment-score { font-size: 1.2em; font-weight: bold; margin-top: -20px; color: var(--primary-accent); }
        
        .sidebar { display: flex; flex-direction: column; gap: 30px; }
        .rankings { background: var(--card-color); border: 1px solid var(--border-color); padding: 25px; border-radius: 15px; box-shadow: 0 8px 25px var(--shadow-color); }
        .rankings h3 { font-size: 1.4em; color: var(--header-color); margin-bottom: 15px; text-align: center; }
        .rankings ol { list-style: none; padding: 0; counter-reset: item; }
        .rankings li { display: flex; align-items: center; justify-content: space-between; padding: 10px 5px; border-bottom: 1px solid var(--border-color); font-size: 1em; }
        .rankings li::before { content: counter(item) ". "; counter-increment: item; font-weight: bold; color: var(--text-color-light); margin-right: 10px; }
        .rankings li:last-child { border-bottom: none; }
        .rankings .brand-name { font-weight: 500; }
        .rankings .guochao { color: var(--guochao-color); }
        .rankings .luxury { color: var(--luxury-color); }
        .rankings .engagement-score { font-weight: bold; color: var(--primary-accent); }

        @media (max-width: 1400px) { .geo-content { grid-template-columns: 1fr; } }
        @media (max-width: 1200px) { .main-layout { grid-template-columns: 1fr; } .sidebar { order: -1; } }
        @media (max-width: 992px) { .charts { grid-template-columns: 1fr; } }
        @media (max-width: 768px) { .metrics { grid-template-columns: 1fr 1fr; } .header h1 { font-size: 2.2em; } .container { padding: 20px; } }
        @media (max-width: 480px) { .metrics { grid-template-columns: 1fr; } body { padding: 10px; } .container { padding: 15px; } }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="theme-switcher">
                <label class="switch">
                    <input type="checkbox" id="theme-toggle">
                    <span class="slider"></span>
                </label>
            </div>
            <h1><span class="guochao-icon"></span>Guochao vs. LVMH<span class="luxury-icon"></span></h1>
        </div>

        <div class="metrics">
            <div class="metric-card"><h3 class="guochao">Guochao Posts</h3><div class="value" data-value="640">0</div></div>
            <div class="metric-card luxury"><h3>LVMH Posts</h3><div class="value" data-value="200">0</div></div>
            <div class="metric-card"><h3 class="guochao">Guochao Engagement</h3><div class="value" data-value="35.2">0.0</div></div>
            <div class="metric-card luxury"><h3>LVMH Engagement</h3><div class="value" data-value="6.6">0.0</div></div>
            <div class="metric-card sov"><h3 class="guochao">Guochao SOV</h3><div class="value" data-value="76.2">0</div>%</div>
            <div class="metric-card sov luxury"><h3>LVMH SOV</h3><div class="value" data-value="23.8">0</div>%</div>
        </div>

        <div class="main-layout">
            <div class="main-content">
                <div class="tabs">
                    <h2 class="tab-link active" onclick="openTab(event, 'performance')">üìä Performance Overview</h2>
                    <h2 class="tab-link" onclick="openTab(event, 'brands')">üèÜ Brand Deep Dive</h2>
                    <h2 class="tab-link" onclick="openTab(event, 'sentiment')">üß† Sentiment Analysis</h2>
                    <h2 class="tab-link" onclick="openTab(event, 'geo')">üåè Global Deep Dive</h2>
                </div>

                <div id="performance" class="tab-content active">
                    <div class="charts">
                        <div class="chart" id="platformChart"></div>
                        <div class="chart" id="efficiencyChart"></div>
                    </div>
                </div>

                <div id="brands" class="tab-content">
                    <div class="charts">
                        <div class="chart" id="topGuochaoChart"></div>
                        <div class="chart" id="topLvmhChart"></div>
                    </div>
                </div>

                <div id="sentiment" class="tab-content">
                    <div class="charts">
                        <div class="chart sentiment-card" id="guochaoSentimentChart"></div>
                        <div class="chart sentiment-card" id="lvmhSentimentChart"></div>
                    </div>
                </div>

                <div id="geo" class="tab-content">
                    <div class="geo-content">
                        <div class="chart" id="geoRadarChart"></div>
                        <div class="data-table-container">
                            <h3 style="text-align:center; margin-bottom: 15px;">Regional Data Breakdown</h3>
                            <table class="data-table" id="geo-data-table">
                                <!-- Data will be injected by JavaScript -->
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="sidebar">
                <div class="rankings">
                    <h3>üèÜ Top 10 Brands by Engagement</h3>
                    <ol id="top-brands-list"></ol>
                </div>
            </div>
        </div>
        
        <div class="footer">
            <p>Data Source: Chinese, US & EU Social Media (Sample Data) | Last Updated: <span id="timestamp"></span></p>
        </div>
    </div>

    <script>
        // --- THEME SWITCHER LOGIC ---
        const themeToggle = document.getElementById('theme-toggle');
        themeToggle.addEventListener('change', (e) => {
            document.documentElement.setAttribute('data-theme', e.target.checked ? 'dark' : 'light');
            localStorage.setItem('theme', e.target.checked ? 'dark' : 'light');
            renderCharts();
        });
        if (localStorage.getItem('theme') === 'dark') {
            themeToggle.checked = true;
            document.documentElement.setAttribute('data-theme', 'dark');
        }

        // --- TAB LOGIC ---
        function openTab(evt, tabName) {
            document.querySelectorAll('.tab-content').forEach(tab => tab.style.display = 'none');
            document.querySelectorAll('.tab-link').forEach(link => link.classList.remove('active'));
            const activeTab = document.getElementById(tabName);
            activeTab.style.display = 'block';
            evt.currentTarget.classList.add('active');

            // Resize Plotly charts in the active tab to fix rendering issue
            setTimeout(() => {
                activeTab.querySelectorAll('.chart').forEach(chartDiv => {
                    if (chartDiv.id) Plotly.Plots.resize(chartDiv);
                });
            }, 10);
        }

        // --- ANIMATION LOGIC ---
        function animateValue(obj, start, end, duration) {
            let startTimestamp = null;
            const step = (timestamp) => {
                if (!startTimestamp) startTimestamp = timestamp;
                const progress = Math.min((timestamp - startTimestamp) / duration, 1);
                const easedProgress = 1 - Math.pow(1 - progress, 3); // easeOutCubic
                const value = easedProgress * (end - start) + start;
                obj.innerHTML = value % 1 !== 0 ? value.toFixed(1) : Math.floor(value);
                if (progress < 1) {
                    window.requestAnimationFrame(step);
                }
            };
            window.requestAnimationFrame(step);
        }

        // --- DATA ---
        const brandData = [
            { name: "Li-Ning", category: "guochao", score: 982, posts: 50, avg_eng: 19.6 },
            { name: "Anta", category: "guochao", score: 951, posts: 45, avg_eng: 21.1 },
            { name: "Fendi", category: "luxury", score: 322, posts: 25, avg_eng: 12.9 },
            { name: "Perfect Diary", category: "guochao", score: 311, posts: 60, avg_eng: 5.2 },
            { name: "Louis Vuitton", category: "luxury", score: 287, posts: 30, avg_eng: 9.6 },
            { name: "Marc Jacobs", category: "luxury", score: 272, posts: 35, avg_eng: 7.8 },
            { name: "JNBY", category: "guochao", score: 250, posts: 28, avg_eng: 8.9 },
            { name: "Dior", category: "luxury", score: 223, posts: 22, avg_eng: 10.1 },
            { name: "HeyTea", category: "guochao", score: 215, posts: 55, avg_eng: 3.9 },
            { name: "Givenchy", category: "luxury", score: 212, posts: 20, avg_eng: 10.6 }
        ];

        // --- INITIALIZE ---
        document.addEventListener("DOMContentLoaded", () => {
            // Animate metric cards
            document.querySelectorAll('.value').forEach(obj => {
                const endValue = parseFloat(obj.getAttribute('data-value'));
                animateValue(obj, 0, endValue, 2000);
            });
            
            document.getElementById('timestamp').textContent = new Date().toLocaleString();
            
            // Populate brand rankings
            const list = document.getElementById('top-brands-list');
            brandData.sort((a, b) => b.score - a.score).forEach(brand => {
                list.innerHTML += `<li class="${brand.category}"><span class="brand-name">${brand.name}</span><span class="engagement-score">${brand.score.toFixed(0)}</span></li>`;
            });

            renderCharts();
        });
        
        // --- PLOTLY CHARTS ---
        function renderCharts() {
            const isDarkMode = document.documentElement.getAttribute('data-theme') === 'dark';
            const plot_bgcolor = 'rgba(0,0,0,0)';
            const paper_bgcolor = 'rgba(0,0,0,0)';
            const font_color = isDarkMode ? '#e0e0e0' : '#2c3e50';
            const grid_color = isDarkMode ? '#374151' : '#ecf0f1';
            const baseLayout = {
                plot_bgcolor, paper_bgcolor, showlegend: false,
                font: { color: font_color },
                xaxis: { gridcolor: grid_color, zerolinecolor: grid_color },
                yaxis: { gridcolor: grid_color, zerolinecolor: grid_color },
                margin: { t: 50, b: 40, l: 50, r: 20 }
            };

            // --- Performance Tab ---
            const platforms = ['Xiaohongshu', 'Weibo', 'Douyin', 'Bilibili'];
            const guochaoPlatformData = { x: platforms, y: [45, 38, 30, 25], name: 'Guochao', type: 'bar', marker: { color: 'var(--guochao-color)' } };
            const luxuryPlatformData = { x: platforms, y: [8, 7, 5, 4], name: 'LVMH', type: 'bar', marker: { color: 'var(--luxury-color)' } };
            Plotly.newPlot('platformChart', [guochaoPlatformData, luxuryPlatformData], { ...baseLayout, title: 'Platform Engagement', barmode: 'group', showlegend: true, legend: { orientation: 'h', y: -0.2 } }, {responsive: true, displayModeBar: false});

            const efficiencyData = brandData.map(brand => ({
                x: [brand.posts], y: [brand.avg_eng], text: brand.name,
                mode: 'markers',
                marker: {
                    size: [Math.sqrt(brand.score)], sizeref: 2 * Math.max(...brandData.map(b => Math.sqrt(b.score))) / (40**2),
                    color: brand.category === 'guochao' ? 'var(--guochao-color)' : 'var(--luxury-color)',
                    opacity: 0.7
                },
                name: brand.name
            }));
            Plotly.newPlot('efficiencyChart', efficiencyData, { ...baseLayout, title: 'Brand Efficiency (Posts vs. Avg Engagement)', xaxis: { title: 'Number of Posts' }, yaxis: { title: 'Average Engagement' }, showlegend: false }, {responsive: true, displayModeBar: false});

            // --- Brands Tab ---
            const topGuochao = brandData.filter(b => b.category === 'guochao').sort((a,b) => b.score - a.score).slice(0, 5);
            Plotly.newPlot('topGuochaoChart', [{ x: topGuochao.map(b => b.name), y: topGuochao.map(b => b.score), type: 'bar', marker: { color: 'var(--guochao-color)' } }], { ...baseLayout, title: 'üèÜ Top 5 Guochao Brands by Engagement' }, {responsive: true, displayModeBar: false});

            const topLvmh = brandData.filter(b => b.category === 'luxury').sort((a,b) => b.score - a.score).slice(0, 5);
            Plotly.newPlot('topLvmhChart', [{ x: topLvmh.map(b => b.name), y: topLvmh.map(b => b.score), type: 'bar', marker: { color: 'var(--luxury-color)' } }], { ...baseLayout, title: 'üëë Top 5 LVMH Brands by Engagement' }, {responsive: true, displayModeBar: false});

            // --- Sentiment Tab ---
            const guochaoSentiments = { pos: 175, neu: 454, neg: 11 };
            const guochaoTotal = guochaoSentiments.pos + guochaoSentiments.neu + guochaoSentiments.neg;
            const guochaoScore = ((guochaoSentiments.pos - guochaoSentiments.neg) / guochaoTotal * 100).toFixed(1);
            const guochaoSentimentData = [{ values: Object.values(guochaoSentiments), labels: ['Positive', 'Neutral', 'Negative'], type: 'pie', marker: { colors: ['#2ecc71', '#95a5a6', '#e74c3c'] }, hole: 0.4, textinfo: 'percent', textposition: 'inside' }];
            Plotly.newPlot('guochaoSentimentChart', guochaoSentimentData, { ...baseLayout, title: 'Guochao Sentiment Distribution' }, {responsive: true, displayModeBar: false})
                .then(() => document.querySelector('#guochaoSentimentChart').innerHTML += `<div class="sentiment-score">Sentiment Score: ${guochaoScore}</div>`);

            const lvmhSentiments = { pos: 30, neu: 150, neg: 20 };
            const lvmhTotal = lvmhSentiments.pos + lvmhSentiments.neu + lvmhSentiments.neg;
            const lvmhScore = ((lvmhSentiments.pos - lvmhSentiments.neg) / lvmhTotal * 100).toFixed(1);
            const lvmhSentimentData = [{ values: Object.values(lvmhSentiments), labels: ['Positive', 'Neutral', 'Negative'], type: 'pie', marker: { colors: ['#2ecc71', '#95a5a6', '#e74c3c'] }, hole: 0.4, textinfo: 'percent', textposition: 'inside' }];
            Plotly.newPlot('lvmhSentimentChart', lvmhSentimentData, { ...baseLayout, title: 'LVMH Sentiment Distribution' }, {responsive: true, displayModeBar: false})
                 .then(() => document.querySelector('#lvmhSentimentChart').innerHTML += `<div class="sentiment-score">Sentiment Score: ${lvmhScore}</div>`);

            // --- NEW: Global Deep Dive Tab ---
            const geoData = {
                metrics: ['Engagement Rate %', 'Sentiment Score', 'Post Frequency', 'Avg. Engagement'],
                China:   { values: [1.2, 25.4, 3.5, 6.6], color: 'var(--luxury-color)' },
                USA:     { values: [0.8, 8.5, 8.2, 4.5], color: 'var(--us-color)' },
                Europe:  { values: [0.6, 12.1, 5.1, 3.1], color: 'var(--europe-color)' }
            };

            const radarData = Object.keys(geoData).filter(k => k !== 'metrics').map(region => ({
                type: 'scatterpolar',
                r: geoData[region].values,
                theta: geoData.metrics,
                fill: 'toself',
                name: region,
                marker: { color: geoData[region].color }
            }));

            const radarLayout = {
                ...baseLayout,
                title: 'LVMH Market DNA: China vs. US vs. Europe',
                polar: {
                    radialaxis: { visible: true, range: [0, Math.max(...[].concat(...Object.values(geoData).filter(o => typeof o === 'object').map(o => o.values)))] }
                },
                showlegend: true,
                legend: { orientation: 'h', y: -0.1 }
            };
            Plotly.newPlot('geoRadarChart', radarData, radarLayout, {responsive: true, displayModeBar: false});

            // Populate the data table
            const table = document.getElementById('geo-data-table');
            let tableHTML = '<thead><tr><th>Metric</th><th>China</th><th>USA</th><th>Europe</th></tr></thead><tbody>';
            geoData.metrics.forEach((metric, i) => {
                tableHTML += `<tr>
                    <td><strong>${metric}</strong></td>
                    <td class="region-china">${geoData.China.values[i]}</td>
                    <td class="region-us">${geoData.USA.values[i]}</td>
                    <td class="region-europe">${geoData.Europe.values[i]}</td>
                </tr>`;
            });
            table.innerHTML = tableHTML + '</tbody>';
        }
    </script>
</body>
</html> 
